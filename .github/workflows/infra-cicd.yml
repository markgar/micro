name: infra-cicd

on:
  push:
    branches: [ main ]
    paths:
    - 'infra/**'
    - '.github/workflows/infra-cicd.yml'
  pull_request:
    branches: [ main ]
    paths:
    - 'infra/**'
    - '.github/workflows/infra-cicd.yml'

jobs:
  bicep-build-and-deploy:
    name: bicep build and deploy
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Install the latest release of the bicep CLI
      - name: Install bicep CLI
        id: installbicep
        run: |
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ./bicep
          sudo mv ./bicep /usr/local/bin/bicep
          bicep --help
           
      # Transpile bicep file into ARM template
      - name: Build ARM Template from bicep file
        id: bicepbuild
        run: |
          bicep build ./infra/main.bicep
      
      - name: Azure Login
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Emit template what-if
      # - name: Run what-if
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #       az account show
      #       az deployment group what-if -g micro-a -f ./infra/main.json --mode complete

      # Deploy template
      - name: Deploy template
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: micro-a
          template: ./infra/main.json
          deploymentName: ${{ github.WORKFLOW }}__${{ github.RUN_ID }}
          deploymentMode: Complete

      # Deploy template
      - name: Configure
        id: configure
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az appconfig kv set -n micro-appcfg-2tg --key CatalogItemServiceUrl --value ${{ steps.deploy.outputs.catalogItemServiceUrl }} -y -o none
            az appconfig kv set -n micro-appcfg-2tg --key CosmosDb:Account --value ${{ steps.deploy.outputs.cosmosAccountEndpoint }} -y -o none
            az appconfig kv set -n micro-appcfg-2tg --key CosmosDb:DatabaseName --value micro -y -o none
            az appconfig kv set -n micro-appcfg-2tg --key CosmosDb:Key --value PLEASE_FILL -y -o none

            az webapp config appsettings set -g micro-a -n micro-catalog-web-2tg --settings ConnectionStrings:AppConfig=PLEASE_FILL -o none

            az webapp config appsettings set -g micro-a -n micro-cart-web-2tg --settings ConnectionStrings:AppConfig=PLEASE_FILL -o none
