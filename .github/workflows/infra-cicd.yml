name: infra-cicd

on:
  push:
    branches: [ main ]
    paths:
    - 'infra/**'
    - '.github/workflows/infra-cicd.yml'
  pull_request:
    branches: [ main ]
    paths:
    - 'infra/**'
    - '.github/workflows/infra-cicd.yml'

jobs:
  bicep-build-and-deploy:
    name: bicep build and deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Install the latest release of the bicep CLI
      - name: Install bicep CLI
        id: installbicep
        run: |
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ./bicep
          sudo mv ./bicep /usr/local/bin/bicep
          bicep --help
           
      # Transpile bicep file into ARM template
      - name: Build ARM Template from bicep file
        id: bicepbuild
        run: |
          bicep build ./infra/main.bicep
      
      - name: Azure Login
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Emit template what-if
      # - name: Run what-if
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #       az account show
      #       az deployment group what-if -g micro-a -f ./infra/main.json --mode complete

      # Deploy template
      - name: Deploy template (complete mode)
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: micro-a
          template: ./infra/main.json
          parameters: adminUserName=${{ secrets.ADMIN_USERNAME }} adminPassword=${{ secrets.ADMIN_PASSWORD }}
          deploymentName: ${{ github.WORKFLOW }}__${{ github.RUN_ID }}
          deploymentMode: Complete

      # Set Keys
      - name: Set Keys
        id: setkeys
        run: |
          key=$(az cosmosdb keys list -g micro-a -n micro-cosmos-2tg --query primaryMasterKey | tr -d '"')
          az appconfig kv set --key CosmosDb:Key --value $key --name micro-appcfg-2tg -y -o none

          appConfigConnectionString=$(az appconfig credential list -n micro-appcfg-2tg -g micro-a --query "[?name=='Primary'].connectionString | [0]" | tr -d '"')
          az webapp config appsettings set --name micro-catalog-web-2tg --resource-group micro-a --settings ConnectionStrings:AppConfig=$appConfigConnectionString -o none
          az webapp config appsettings set --name micro-cart-web-2tg --resource-group micro-a --settings ConnectionStrings:AppConfig=$appConfigConnectionString -o none
